// <s.Screen>
    //   <s.Container
    //     flex={1}
    //     ai={"center"}
    //     style={{ padding: 24, backgroundColor: "var(--primary)" }}
    //     image={CONFIG.SHOW_BACKGROUND ? "/config/images/bg.png" : null}
    //   >
    //     <StyledLogo alt={"logo"} src={"/config/images/logo.png"} />
    //     <s.SpacerSmall />
    //     <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>
    //       <s.Container flex={1} jc={"center"} ai={"center"}>
    //         <StyledImg alt={"example"} src={"../../assets/1.png"} />
    //       </s.Container>
    //       <s.SpacerLarge />
    //       <s.Container
    //         flex={2}
    //         jc={"center"}
    //         ai={"center"}
    //         style={{
    //           backgroundColor: "var(--accent)",
    //           padding: 24,
    //           borderRadius: 24,
    //           border: "4px dashed var(--secondary)",
    //           boxShadow: "0px 5px 11px 2px rgba(0,0,0,0.7)",
    //         }}
    //       >
    //         <s.TextTitle
    //           style={{
    //             textAlign: "center",
    //             fontSize: 50,
    //             fontWeight: "bold",
    //             color: "var(--accent-text)",
    //           }}
    //         >
    //           {data.totalSupply} / {CONFIG.MAX_SUPPLY}
    //         </s.TextTitle>
    //         <s.TextDescription
    //           style={{
    //             textAlign: "center",
    //             color: "var(--primary-text)",
    //           }}
    //         >
    //           <StyledLink target={"_blank"} href={CONFIG.SCAN_LINK}>
    //             {truncate(CONFIG.CONTRACT_ADDRESS, 15)}
    //           </StyledLink>
    //         </s.TextDescription>
    //         <s.SpacerSmall />
    //         {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (
    //           <>
    //             <s.TextTitle
    //               style={{ textAlign: "center", color: "var(--accent-text)" }}
    //             >
    //               The sale has ended.
    //             </s.TextTitle>
    //             <s.TextDescription
    //               style={{ textAlign: "center", color: "var(--accent-text)" }}
    //             >
    //               You can still find {CONFIG.NFT_NAME} on
    //             </s.TextDescription>
    //             <s.SpacerSmall />
    //             <StyledLink target={"_blank"} href={CONFIG.MARKETPLACE_LINK}>
    //               {CONFIG.MARKETPLACE}
    //             </StyledLink>
    //           </>
    //         ) : (
    //           <>
    //             <s.TextTitle
    //               style={{ textAlign: "center", color: "var(--accent-text)" }}
    //             >
    //               1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{" "}
    //               {CONFIG.NETWORK.SYMBOL}.
    //             </s.TextTitle>
    //             <s.SpacerXSmall />
    //             <s.TextDescription
    //               style={{ textAlign: "center", color: "var(--accent-text)" }}
    //             >
    //               Excluding gas fees.
    //             </s.TextDescription>
    //             <s.SpacerSmall />
    //             {blockchain.account === "" ||
    //             blockchain.smartContract === null ? (
    //               <s.Container ai={"center"} jc={"center"}>
    //                 <s.TextDescription
    //                   style={{
    //                     textAlign: "center",
    //                     color: "var(--accent-text)",
    //                   }}
    //                 >
    //                   Connect to the {CONFIG.NETWORK.NAME} network
    //                 </s.TextDescription>
    //                 <s.SpacerSmall />
    //                 <StyledButton
    //                   onClick={(e) => {
    //                     e.preventDefault();
    //                     dispatch(connect());
    //                     getData();
    //                   }}
    //                 >
    //                   CONNECT
    //                 </StyledButton>
    //                 {blockchain.errorMsg !== "" ? (
    //                   <>
    //                     <s.SpacerSmall />
    //                     <s.TextDescription
    //                       style={{
    //                         textAlign: "center",
    //                         color: "var(--accent-text)",
    //                       }}
    //                     >
    //                       {blockchain.errorMsg}
    //                     </s.TextDescription>
    //                   </>
    //                 ) : null}
    //               </s.Container>
    //             ) : (
    //               <>
    //                 <s.TextDescription
    //                   style={{
    //                     textAlign: "center",
    //                     color: "var(--accent-text)",
    //                   }}
    //                 >
    //                   {feedback}
    //                 </s.TextDescription>
    //                 <s.SpacerMedium />
    //                 <s.Container ai={"center"} jc={"center"} fd={"row"}>
    //                   <StyledRoundButton
    //                     style={{ lineHeight: 0.4 }}
    //                     disabled={claimingNft ? 1 : 0}
    //                     onClick={(e) => {
    //                       e.preventDefault();
    //                       decrementMintAmount();
    //                     }}
    //                   >
    //                     -
    //                   </StyledRoundButton>
    //                   <s.SpacerMedium />
    //                   <s.TextDescription
    //                     style={{
    //                       textAlign: "center",
    //                       color: "var(--accent-text)",
    //                     }}
    //                   >
    //                     {mintAmount}
    //                   </s.TextDescription>
    //                   <s.SpacerMedium />
    //                   <StyledRoundButton
    //                     disabled={claimingNft ? 1 : 0}
    //                     onClick={(e) => {
    //                       e.preventDefault();
    //                       incrementMintAmount();
    //                     }}
    //                   >
    //                     +
    //                   </StyledRoundButton>
    //                 </s.Container>
    //                 <s.SpacerSmall />
    //                 <s.Container ai={"center"} jc={"center"} fd={"row"}>
    //                   <StyledButton
    //                     disabled={claimingNft ? 1 : 0}
    //                     onClick={(e) => {
    //                       e.preventDefault();
    //                       claimNFTs();
    //                       getData();
    //                     }}
    //                   >
    //                     {claimingNft ? "BUSY" : "BUY"}
    //                   </StyledButton>
    //                 </s.Container>
    //               </>
    //             )}
    //           </>
    //         )}
    //         <s.SpacerMedium />
    //       </s.Container>
    //       <s.SpacerLarge />
    //       <s.Container flex={1} jc={"center"} ai={"center"}>
    //         <StyledImg
    //           alt={"example"}
    //           src={"/config/images/example.gif"}
    //           style={{ transform: "scaleX(-1)" }}
    //         />
    //       </s.Container>
    //     </ResponsiveWrapper>
    //     <s.SpacerMedium />
    //     <s.Container jc={"center"} ai={"center"} style={{ width: "70%" }}>
    //       <s.TextDescription
    //         style={{
    //           textAlign: "center",
    //           color: "var(--primary-text)",
    //         }}
    //       >
    //         Please make sure you are connected to the right network (
    //         {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:
    //         Once you make the purchase, you cannot undo this action.
    //       </s.TextDescription>
    //       <s.SpacerSmall />
    //       <s.TextDescription
    //         style={{
    //           textAlign: "center",
    //           color: "var(--primary-text)",
    //         }}
    //       >
    //         We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to
    //         successfully mint your NFT. We recommend that you don't lower the
    //         gas limit.
    //       </s.TextDescription>
    //     </s.Container>
    //   </s.Container>
    // </s.Screen>
//-----------------------
    import React, { Suspense } from 'react'
// import styled from 'styled-components'
// import Showcase from './Showcase.js'
// import {ethers, BigNumber} from "ethers";
// import { useEffect, useState } from "react";
// import { useSpring, animated } from "react-spring";
// import { motion } from 'framer-motion';
// import Count from './CountdownTimer/CountdownTimer'
// import { AiFillPlusCircle, AiFillMinusCircle } from "react-icons/ai";
// import img from '../../assets/giphy (3).gif'
// import '../../../index.css'
// import lightning1 from "../../assets/Lightning_Bursts_1_2286_2K.gif"


// import { useDispatch, useSelector } from "react-redux";
// import { fetchData } from "./redux/data/dataActions";
// import { connect } from "./redux/blockchain/blockchainActions";


// import '../../fonts.css'

// // const Number = () => {
// // 	const [isHigh, setHigh] = useState(false);
// // 	const { number } = useSpring({
// // 		number: isHigh ? 100 : 0
// // 	});

// // 	const toggle = () => setHigh(state => !state);

// // 	return (
// // 		<>
// // 			<animated.span>
// // 				{number.interpolate(x => x.toFixed(0))}
// // 			</animated.span>
// // 			<button onClick={toggle}>TOGGLE</button>
// // 		</>
// // 	);
// // };

// const ContainerCenter = styled.div`
//   width: 80%;
//   margin: 2rem auto;

//   display: flex;
//   // justify-content: space-between;
//   align-items: center;
//   flex-wrap: wrap;

//   @media (max-width: 64em) {
//     width: 80%;
//   }
//   @media (max-width: 48em) {
//     width: 90%;
//     justify-content: center;
//   }
//   justify-content: center;
//   align-items: center;
// `



// const Section = styled.a`
//   height: 100vh;
//   width: 100%;
//   display: flex;
//   justify-content: center;
//   align-items: center;
//   position: relative;
//   overflow: hidden;
//   // background-color: #161717;
// `
// const Container = styled.div`
// width: 80%;
// margin: 1rem auto;

// display: flex;
// justify-content: space-around;
// align-items: center;
// flex-wrap: wrap;

// @media (max-width: 64em) {
//   width: 80%;
// }
// @media (max-width: 48em) {
//   width: 90%;
//   justify-content: center;
// }
// justify-content: center;
// align-items: center;
// `

// const Box = styled.div`
//   width: 50%;
//   max-height: 600px;
//   display: inline-block;
//   flex-direction: column;
//   justify-content: center;
//   align-items: center;

//   // margin
//   @media (max-width: 40em) {
//     min-height: 50vh;
//   }
//   border: .5px solid black;
//   margin-top: 3%;
//   // box-shadow: 10px 10px 10px black;
//   background-color: #171717;
//   box-shadow: 0px 0px 40px 20px #4e32a8;
//   border-radius: 40px;
// `

// const Title = styled.h2`
//   text-align: center;
//   font-size: 4em;
//   text-transform: capitalize;
//   color: white;
//   align-self: flex-start;
//   width: 80%;
//   margin: 0 auto;
//   font-weight: bold;

//   @media (max-width: 64em) {
//     width: 100%;
//     text-align: center;
//   }
//   @media (max-width: 40em) {
//     font-size: 3em;
//   }
//   @media (max-width: 30em) {
//     font-size: 1.25em};
//   }

// `

// const SubText = styled.p`
//   display: flex; 
//   justify-content: space-evenly;
//   font-size: 1.5em;
//   color: white;
//   align-self: flex-start;
//   margin: 1rem auto;
//   font-weight: bold;
// `



// const Button = styled.button`
//   background: #fff5f6;
//   // background: -webkit-linear-gradient(top, #9c3e5e, #d665ab);
//   // background: -moz-linear-gradient(top, #9c3e5e, #d665ab);
//   // background: -ms-linear-gradient(top, #9c3e5e, #d665ab);
//   // background: -o-linear-gradient(top, #9c3e5e, #d665ab);
//   padding: 0px 6px;
//   -webkit-border-radius: 8px;
//   -moz-border-radius: 8px;
//   border-radius: 8px;
//   -webkit-box-shadow: rgba(0,0,0,1) 0 1px 0;
//   -moz-box-shadow: rgba(0,0,0,1) 0 1px 0;
//   box-shadow: rgba(0,0,0,1) 0 1px 0;
//   text-shadow: rgba(0,0,0,.4) 0 px 0;
//   color: #000000;
//   font-size: 30px;
//   font-weight: 500;
// `

// const ImgContainer = styled.div`
// margin-top: 10%;
// margin:auto;

// cursor: pointer;

// @media (max-width: 48em) {
//   width: 12rem;
// }
// @media (max-width: 30em) {
//   width: 10rem;
// }

// // border-radius: 50px;
// width: 50%;
// height: auto;
// border: 2px solid white;
// justify-content: center;
// align-items: center;
// `

// const Mint = () => {



// return (
//   // <div className='disUnder'>
//   <Section style={{backgroundImage: `url(${lightning1})`}}>
//     <ContainerCenter>
    
//       <Count countdownTimestampMs={1659983662000}/>
      
//       <Box > 
//       <SubText className='titleNumbers'>8500/8500</SubText>
//       <ImgContainer>
//       <img width={500} height={400} src={img} alt="UnderDogZ" />
//       </ImgContainer>
//       <Container>      
//       <AiFillMinusCircle color='white' className="MintIcons"/>
//       <button className="button-85 titleFont" role="button">MINT</button>      
//       <AiFillPlusCircle color='white' className='MintIcons'/>
//       </Container>
//       <SubText className='boxText subFont' color='white'>1</SubText>
//       {/* <Showcase/> */}
//       </Box>
//     </ContainerCenter>
//   </Section>
//   // </div>
// )}

// export default Mint